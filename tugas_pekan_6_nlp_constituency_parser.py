# -*- coding: utf-8 -*-
"""Tugas Pekan 6 - NLP - Constituency Parser.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V-RyURVga37ZpKO1EfajFjNcdgAVy5gY

# **Constituency Parser**

---

Clarisa Hasya Y - 1301174256
"""

import nltk
from nltk.parse.generate import generate
from nltk.parse import ViterbiParser

"""## Bagian I

**Definisi CFG**
"""

grammar_1 = nltk.CFG.fromstring("""
    S -> NP VP
    VP -> V NP | V NP PP
    PP -> P NP
    V -> "melihat" | "memakan" | "berjalan"
    NP -> "John" | "Mary" | "Bob" | Det N | Det N PP
    Det -> "sebuah" | "seorang" | "seekor"
    N -> "pria" | "anjing" | "kucing" | "taman" | "ayam"
    P -> "di" | "oleh" | "dengan" | "milik"
    """)

"""**Definisi Kalimat**"""

sent_1 = 'John melihat seekor kucing di sebuah taman'.split()
sent_2 = 'Mary memakan seekor ayam dengan John'.split()
sent_3 = 'seorang pria melihat seekor anjing milik Bob'.split()

"""**Top Down Parser**"""

td_parser = nltk.parse.TopDownChartParser(grammar_1)

print("Top Down Parser")
print("===========================================================================================")
for tree in td_parser.parse(sent_1):
    print(tree)
print("===========================================================================================")
for tree in td_parser.parse(sent_2):
    print(tree)
print("===========================================================================================")
for tree in td_parser.parse(sent_3):
    print(tree)
print("===========================================================================================")

"""**Bottom Up Parser**"""

bu_parser = nltk.parse.BottomUpChartParser(grammar_1)

print("Bottom Up Parser")
print("===========================================================================================")
for tree in bu_parser.parse(sent_1):
    print(tree)
print("===========================================================================================")
for tree in bu_parser.parse(sent_2):
    print(tree)
print("===========================================================================================")
for tree in bu_parser.parse(sent_3):
    print(tree)
print("===========================================================================================")

"""**Shift Reduce Parser**"""

sr_parser = nltk.ShiftReduceParser(grammar_1, trace=2)

print("Shift Reduce Parser")
print("===========================================================================================")
for tree in sr_parser.parse(sent_1):
    print(tree)
print("===========================================================================================")
for tree in sr_parser.parse(sent_2):
    print(tree)
print("===========================================================================================")
for tree in sr_parser.parse(sent_3):
    print(tree)
print("===========================================================================================")

"""**Cek apakah Grammar grammar_1 memenuhi syarat CNF**"""

print("Cek apakah Grammar grammar_1 memenuhi syarat CNF", grammar_1.is_chomsky_normal_form())

"""**Mengubah menjadi CNF**"""

grammar_2 = nltk.CFG.fromstring("""
    S -> NP VP
    VP -> V NP 
    PP -> P NP | H0 PP
    V -> "melihat" | "memakan" | "berjalan"
    NP -> "John" | "Mary" | "Bob" | Det N | H1 PP
    Det -> "sebuah" | "seorang" | "seekor"
    N -> "pria" | "anjing" | "kucing" | "taman" | "ayam" 
    P -> "di" | "oleh" | "dengan" | "milik"
    H0 -> V NP
    H1 -> Det N
    """)

"""**Cek apakah Grammar grammar_2 memenuhi syarat CNF**"""

print("Cek apakah Grammar grammar_2 memenuhi syarat CNF",grammar_2.is_chomsky_normal_form())

"""## Bagian II

**Generate Grammar** dari file constituency treebank

File yang digunakan adalah 5 kalimat awal dari Constituency Treebank Bahasa Indonesia, kethu https://github.com/ialfina/kethu
"""

from nltk.corpus import BracketParseCorpusReader

ptb = BracketParseCorpusReader(r"", r".*/*\.mrg")

print(ptb)
print(ptb.sents())
print(ptb.parsed_sents())

"""**Induksi PCFG** (Probabilistic Context Free Grammar) dari constituency Treebank"""

from nltk import Nonterminal, nonterminals, Production, PCFG, induce_pcfg

S = Nonterminal('S')

productions = []
for t in ptb.parsed_sents():
    productions += t.productions()
grammar_3 = induce_pcfg(S, productions)
print(grammar_3)

"""**Bottom Up Parser**"""

sent1 = 'ribuan monyet amankan pesta'.split()
sent2 = 'Beberapa pertandingan ditempatkan di kota Delhi'.split()
# contoh menggunakan bottom-up parser
bu_parser = nltk.parse.BottomUpChartParser(grammar_3)

print("===========================================================================================")
print('Bottom Up Parser')
print("===========================================================================================")
for tree in bu_parser.parse(sent1):
    print(tree)
print("===========================================================================================")
for tree in bu_parser.parse(sent2):
    print(tree)
print("===========================================================================================")

"""**Viterbi Parser**"""

from nltk.parse import ViterbiParser

parser = ViterbiParser(grammar_3, trace=2)

print("Viterbi Parser")
print("===========================================================================================")
for t in parser.parse(sent1):
    t.pretty_print()
print("===========================================================================================")
for t in parser.parse(sent2):
    t.pretty_print()
print("===========================================================================================")